The conductor component of the Habanero AutoGrader for parallel programs

===== Dependencies =====

 - npm
 - nodejs
 - postgres
 - bash
 - svn
     | On the node host, Viola host, and cluster set store-plaintext-passwords
     | to no in ~/.subversion/servers
 - mvn
 - Java 1.8 w/ JAVA_HOME set appropriately
 - checkstyle-all.jar (>= 6.1)
     | Should set environment variable CHECKSTYLE_JAR to point to this.
 - FindBugs
     | Should be somewhere in PATH on the Viola host.
 - lightweight-java-profiler: git@github.com:agrippa/lightweight-java-profiler.git
     | Note that lightweight-java-profiler appears to be broken on Mac OS, so
     | local tests on a Mac laptop will produce useless output).
     | lightweight-java-profiler should be installed on the remote cluster, and an
     | environment variable named LIGHTWEIGHT_JAVA_PROFILER_HOME pointed to its
     | root directory.
 - JUnit 4.x or higher
     | Should be installed on the remote compute cluster and the Viola host, with
     | the environment variable JUNIT_JAR pointed to the main jar file.
 - Hamcrest-core 1.3
     | Should be installed on the remote compute cluster and the Viola host,
     | with the environment variable HAMCREST_JAR pointed to the core jar file.
 - RoadRunner v0.3
     | Should be installed on the remote compute cluster, with the environment
     | variable RR_AGENT_JAR pointed to the agent JAR file and RR_RUNTIME_JAR
     | pointed to the runtime JAR file.
 - AUTOGRADER_HOME
     | This environment variable must be set everywhere (node server, Viola
     | server, cluster) to the root autograder directory.
 - jshint
     | sudo npm install -g jshint
 - RSA keys
     | RSA authentication must be configured using $HOME/.ssh/id_rsa on the
     | conductor with any cluster you wish to execute performance tests on.

===== nodejs installation instructions =====

On Linux:
 1. curl -sL https://deb.nodesource.com/setup_4.x | sudo -E bash -
 2. sudo apt-get install npm
 3. sudo apt-get install -y nodejs

On Mac OS:
 1. https://changelog.com/install-node-js-with-homebrew-on-os-x/

If that doesn't work, take a look at https://nodejs.org/en/download/package-manager/.

===== postgres installation instructions =====

On Linux, follow the below instructions to create a new Postgres database named
autograder, initialized using the provided setup.sql script:

 1. apt-get install postgresql
 2. apt-get install postgresql-contrib
 3. sudo -u postgres psql postgres
    a. \password postgres
    b. Set the postgres user's password (e.g. "foobar")
    c. Ctrl+D to exit
 4. Create the autograder database:
    a. sudo -u postgres createdb autograder
 5. To restart server:
    a. sudo /etc/init.d/postgresql restart
 6. To login to the autograder database:
    a. sudo -u postgres psql --username=postgres --dbname=autograder
    b. \l to list all databases (this should show autograder)
    c. \dt to list all tables in the current database (should be empty now)
 7. Configure the database, the command to use varies from platform to platform, e.g.:
    a. sudo -u postgres psql --username=postgres --dbname=autograder --file=setup.sql
    b. /Applications/Postgres.app/Contents/Versions/9.4/bin/psql --username=jmg3 --dbname=autograder --file=setup.sql

On Mac OS, using Homebrew:
 1. brew install postgresql94
 2. brew services start homebrew/versions/postgresql94
 3. Create a new autograder database:
    a. psql -d postgres --command="CREATE DATABASE autograder" 
 4. Restart the database:
    b. brew services restart postgresql94
 5. Ensure you can manually log in to the autograder database using the instructions below. Log out using Ctrl+D when you are done.
    a. psql -d autograder
    b. \l to list all databases (this should show autograder)
    c. \dt to list all tables in the current database (should be empty now)
 6. Configure the database:
    a. psql -d autograder --file=setup.sql

===== AutoGrader Conductor installation instructions =====

 1. git clone https://github.com/agrippa/habanero-autograder.git
 2. cd habanero-autograder/conductor
 3. ./setup.sh
 4. npm install
 5. ./deploy.sh

The conductor host must have key-based SSH access to the configured cluster.

When deploying the conductor using its deploy.sh script, it will automatically
set itself to listen on port 8081. The following commands work for forwarding
port 80 to 8081 on ananke.cs.rice.edu:

sudo iptables -A INPUT -i ens3 -p tcp --dport 8081 -j ACCEPT
sudo iptables -A INPUT -i ens3 -p tcp --dport 80 -j ACCEPT
sudo iptables -A PREROUTING -t nat -i ens3 -p tcp --dport 80 -j REDIRECT --to-port 8081

===== AutoGrader Viola installation instructions =====

 1. cd habanero-autograder/viola
 2. make
 3. ./deploy.sh localhost 8080 jmg3

===== Conductor configurable environment variables =====

 1. PGSQL_USER
 2. PGSQL_PASSWORD
 3. SVN_USER
 4. SVN_PASSWORD
 5. PORT
 6. VIOLA_HOST
 7. VIOLA_PORT
